{"version":3,"file":"static/js/620.946e734d.chunk.js","mappings":"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","sources":["pages/SecuritySettings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SecurityContainer = styled.div`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Section = styled.section`\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n\r\n  &:disabled {\r\n    background-color: #ccc;\r\n  }\r\n`;\r\n\r\nconst Toggle = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  cursor: pointer;\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst SecuritySettings = () => {\r\n  const { user } = useAuth();\r\n  const [settings, setSettings] = useState({\r\n    twoFactorEnabled: false,\r\n    emailNotifications: true,\r\n    loginAlerts: true\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchSecuritySettings();\r\n  }, []);\r\n\r\n  const fetchSecuritySettings = async () => {\r\n    try {\r\n      const response = await fetch('/api/security-settings', {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n      if (!response.ok) throw new Error('Failed to fetch security settings');\r\n      const data = await response.json();\r\n      setSettings(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateSetting = async (setting, value) => {\r\n    try {\r\n      const response = await fetch('/api/security-settings', {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({ [setting]: value })\r\n      });\r\n      \r\n      if (!response.ok) throw new Error('Failed to update setting');\r\n      \r\n      setSettings(prev => ({\r\n        ...prev,\r\n        [setting]: value\r\n      }));\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleViewActivityLog = () => {\r\n    navigate('/activity-log');\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <SecurityContainer>\r\n      <h1>Security Settings</h1>\r\n      \r\n      <Section>\r\n        <h2>Two-Factor Authentication</h2>\r\n        <Toggle>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={settings.twoFactorEnabled}\r\n            onChange={(e) => updateSetting('twoFactorEnabled', e.target.checked)}\r\n          />\r\n          Enable Two-Factor Authentication\r\n        </Toggle>\r\n        {settings.twoFactorEnabled && (\r\n          <Button onClick={() => {/* Handle 2FA setup */}}>\r\n            Setup 2FA\r\n          </Button>\r\n        )}\r\n      </Section>\r\n\r\n      <Section>\r\n        <h2>Notifications</h2>\r\n        <Toggle>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={settings.emailNotifications}\r\n            onChange={(e) => updateSetting('emailNotifications', e.target.checked)}\r\n          />\r\n          Email Notifications\r\n        </Toggle>\r\n        <Toggle>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={settings.loginAlerts}\r\n            onChange={(e) => updateSetting('loginAlerts', e.target.checked)}\r\n          />\r\n          Login Alerts\r\n        </Toggle>\r\n      </Section>\r\n\r\n      <Section>\r\n        <h2>Recent Activity</h2>\r\n        <p>Last login: {user?.lastLogin || 'Never'}</p>\r\n        <Button onClick={handleViewActivityLog}>\r\n          View Full Activity Log\r\n        </Button>\r\n      </Section>\r\n    </SecurityContainer>\r\n  );\r\n};\r\n\r\nexport default SecuritySettings; "],"names":["SecurityContainer","styled","div","Section","section","Button","button","Toggle","label","SecuritySettings","user","useAuth","settings","setSettings","useState","twoFactorEnabled","emailNotifications","loginAlerts","loading","setLoading","error","setError","navigate","useNavigate","useEffect","fetchSecuritySettings","async","response","fetch","headers","localStorage","getItem","ok","Error","data","json","err","message","updateSetting","setting","value","method","body","JSON","stringify","prev","_jsx","children","_jsxs","type","checked","onChange","e","target","onClick","lastLogin","handleViewActivityLog"],"sourceRoot":""}